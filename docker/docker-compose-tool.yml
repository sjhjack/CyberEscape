version: "3"

services:
  mysql:
    container_name: mysql
    hostname: mysql
    #    image : mysql
    build:
      context: ../
      dockerfile: "./docker/dockerfile/mysql.dockerfile"
    networks:
      - backend
    volumes:
      #- /home/ubuntu/volume/mysql:/var/lib/mysql
      - ./conf/mysql:/etc/mysql/conf.d
    env_file: ".env"
    ports:
      - "3307:3306"

  redis:
    container_name: redis
    image: redis
    networks:
      - backend
    ports:
      - "6379:6379"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    build:
      context: ../
      dockerfile: "./docker/dockerfile/rabbitmq.dockerfile"
    env_file: ".env"
    networks:
      - backend
    volumes:
      - /home/ubuntu/volume/mq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "61613:61613"
      - "15672:15672"

  mongo:
    container_name: mongo
    image: mongo
    networks:
      - backend
    volumes:
      - /home/ubuntu/volume/data:/data
    env_file: ".env"
    ports:
      - "27017:27017"
    #    mongo-express:
    #      image: mongo-express
    #      container_name: mongo-express
    #      restart: always
    #      networks:
    #        - backend
    #      ports:
    #        - "8082:8081"
    #      env_file: ".env"
    #      depends_on:
    #        - mongo

  nginx:
    container_name: nginx-file
    image : nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - /home/ubuntu/volume/game/public:/home/images
    networks:
      - backend
    ports:
      - "88:80"

# 브리지 네트워크는 도커가 제공하는 네트워크 드라이버 중 하나로, 가상
# 인터페이스를 통해 컨테이너들을 연결한다.
networks:
  backend:
    external: true
  frontend:
    ipam:
      driver: default
      config:
        - subnet: "172.16.21.0/24"
          gateway: "172.16.21.1"